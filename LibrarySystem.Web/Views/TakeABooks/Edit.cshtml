@model LibrarySystemProject.Models.TakeABookViewModel.TakeABookEditViewModel

@{
    ViewBag.Title = "Edit";
}

<h2 style="text-align:center; margin-top:30px; color:#333;  margin-bottom: 50px; font-size:35px;">Edit</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
 
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        @*<div class="form-group">
            @Html.LabelFor(model => model.BookId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.BookId, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.BookId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ReaderId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ReaderId, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ReaderId, "", new { @class = "text-danger" })
            </div>
        </div>*@

        <div class="form-group">
        @Html.LabelFor(model => model.Books, htmlAttributes: new { @class = "control-label col-md-5", @style = "color: #333; font-size:15px; " })
        <div class="col-md-offset-5">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                <select name="BookId" id="books" class="form-control col-md-offset">
                    @foreach (var item in Model.Books)
                    {
                        <option value="@item.Value">@item.Text</option>
                    }
                </select>
            </div>
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Users, htmlAttributes: new { @class = "control-label col-md-5", @style = "color: #333; font-size:15px; " })
        <div class="col-md-offset-5">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                <select name="ReaderId" id="readers" class="form-control col-md-offset">
                    @foreach (var item in Model.Users)
                    {
                        <option value="@item.Value">@item.Text</option>
                    }
                </select>
            </div>
        </div>
    </div>

        <div class="form-group">
            @Html.LabelFor(model => model.dateTaken,"Date Taken", htmlAttributes: new { @class = "control-label col-md-5", @style = "color: #333; font-size:15px; " })
            <div class="col-md-offset-5">
                @Html.EditorFor(model => model.dateTaken, new { htmlAttributes = new { @class = "datepicker1" } })
                @Html.ValidationMessageFor(model => model.dateTaken, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.dateForReturn,"Date for Return", htmlAttributes: new { @class = "control-label col-md-5", @style = "color: #333; font-size:15px; " })
            <div class="col-md-offset-5">
                @Html.EditorFor(model => model.dateForReturn, new { htmlAttributes = new { @class = "datepicker2" } })
                @Html.ValidationMessageFor(model => model.dateForReturn, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.dateReturn,"Date Return", htmlAttributes: new { @class = "control-label col-md-5", @style = "color: #333; font-size:15px; " })
            <div class="col-md-offset-5">
                @Html.EditorFor(model => model.dateReturn, new { htmlAttributes = new { @class = "datepicker3" } })
                @Html.ValidationMessageFor(model => model.dateReturn, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-5 col-md-10">
                <input type="submit" value="Save" class="btn-success" style="border-radius:15px; background-color:#333; border-color:#333; height:2.5em; width:5em;" />

                <button class="btn-default" style="border-radius:15px; height:2.5em; width:5em;">
                    @Html.ActionLink("Cancel", "Index")
                </button>
            </div>
        </div>
    </div>
}


<link href="~/Content/themes/base/jquery-ui.min.css" rel="stylesheet" />
<link href="https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css" rel="stylesheet" />

@section scripts{

    <script src="~/Scripts/jquery-ui-1.12.1.min.js"></script>


    <script>

        $(function () {
            $(".datepicker1").datepicker({
                dateFormat: "yy/mm/dd",
                changeMonth: true,
                changeYear: true,
                //yearRange : "-10:+10"
                minDate: new Date(2017, 0, 1),
                maxDate: new Date(2018, 0, 1),
                showOn: "both",
                buttonText: "<i class='fa fa-calendar'></i>",

            });

            $(".datepicker2").datepicker({
                dateFormat: "yy/mm/dd",
                changeMonth: true,
                changeYear: true,
                //yearRange : "-10:+10"
                minDate: new Date(2017, 0, 1),
                maxDate: new Date(2018, 0, 1),
                showOn: "both",
                buttonText: "<i class='fa fa-calendar'></i>",

            });

            $(".datepicker3").datepicker({
                dateFormat: "yy/mm/dd",
                changeMonth: true,
                changeYear: true,
                //yearRange : "-10:+10"
                minDate: new Date(2018, 01, 1),
                maxDate: new Date(2020, 12, 1),
                showOn: "both",
                buttonText: "<i class='fa fa-calendar'></i>",
            });
        });
    </script>}